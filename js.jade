include data-template
-
  /**
   * @func add utm nail to link
   */
  function utm(date, task, place, source, where, lang, sender) {
    if (lang == undefined) {
      var lang = prop_item.lang;
    }
    if (GR) {
      var utm = '?utm_source=fbs-gr360' +'&utm_medium=email&utm_content=newsletter_' + date + '2016' + '_' + task + '_' + place + '_' + source + '_' + where + '&utm_campaign=' + lang + '_rtrg';
    } else if (EMS) {
      LETTERNAME = LETTERNAME || task ;
      var utm = '?utm_source=fbs-eMS' +'&utm_medium=email&utm_content=triger' + '_' + LETTERNAME + '_' + place + '_' + source + '_' + where + '&utm_campaign=' + lang + '_rtrg';
    }
    utm += ((lang === 'ru') || (lang === 'xx')) ?   '&lang=' + lang : '';
    // debug mode
    // console.log(utm)
    return utm;
  }

  /**
   * @func replace spaces to non break spaces
   */
  String.prototype.replaceSpace = function () {
    dataFormated = this.replace(/\s/g, '&nbsp;');
    return dataFormated;
  };

  /**
   * !!! DEPRECATED  !!!
   * @func get site.com instead income https://site.com
   */
  String.prototype.spliceUrl = function () {
    var dataFormated = this.replace('https:\/\/', '');
    var patt = new RegExp('\/$');
    if (patt.test(dataFormated)) {
      dataFormated = dataFormated.replace(/\/$/, '');
    }
    return dataFormated;
  };

  /**
   * @func get site.com instead income https://site.com
   */
  String.prototype.my = function (link) {
    link = link || ''
    var dataFormated = this.replace('https:\/\/', '');
    var patt = new RegExp('\/$');
    if (patt.test(dataFormated)) {
      dataFormated = dataFormated.replace(/\/$/, '');
    }
    return "https://my." + dataFormated + link;
  };

  /**
   * @func good idea to break th endles words, but doesn't work
   * because of lang issues
   */
  function addWordBreak(data, lang) {
    if (lang === 'th') {
        dataFormated = data.replace(/(.{30})/g,"$1&#8203;")
        return dataFormated;
    } else {
        return data;
    }
  }

  /**
   * @func add utm to links in footer
   */
  function replaceUtmInFooter(data, date, lang) {
    if (GR) {
      var footerIndexUtm = '?utm_source=fbs-gr360&utm_medium=email&utm_content=newsletter_' + date + '2016' + '_' + task + '_footer_text_index&utm_campaign=' + lang + '_rtrg';
      var footerPaymentsUtm = '?utm_source=fbs-gr360&utm_medium=email&utm_content=newsletter_' + date + '2016' + '_' + task + '_footer_text_payments&utm_campaign=' + lang + '_rtrg';
    } else if (EMS) {
      LETTERNAME = LETTERNAME || task ;
      var footerIndexUtm = '?utm_source=fbs-eMS&utm_medium=email&utm_content=triger' + '_' + LETTERNAME + '_footer_text_index&utm_campaign=' + lang + '_rtrg';
      var footerPaymentsUtm = '?utm_source=fbs-eMS&utm_medium=email&utm_content=triger' + '_' + LETTERNAME + '_footer_text_payments&utm_campaign=' + lang + '_rtrg';
    }
    footerIndexUtm += ((lang === 'ru') || (lang === 'my')) ?   '&lang=' + lang : '';
    footerPaymentsUtm += ((lang === 'ru') || (lang === 'my')) ?   '&lang=' + lang : '';
    var formatedData;
    formatedData = data.replace('?utm_replace_index', footerIndexUtm);
    formatedData = formatedData.replace('?utm_replace_payments', footerPaymentsUtm);
    if (EMS) {
      formatedData = formatedData.replace('[[remove]]', 'http://s.fbs.direct/u/un.php?par=$uid$_518803_$llid$_1')
    }
    // console.log(footerIndexUtm, '\n', footerPaymentsUtm)
    // console.log(formatedData)
    return formatedData;
  }



  /**
   * @func add one link in to p of text
   */
  function addLinkToText(data, phrase, link) {
    var formattedPhrase = '<a class="link" target="_blank" href="' + link + '">' + phrase + '</a>';
    var formattedData = data.replace(phrase, formattedPhrase);
    return formattedData;
  }

  /**
   * @func capitalize First Letter
   */
   String.prototype.capitalizeFirstLetter = function() {
       return this.charAt(0).toUpperCase() + this.slice(1);
   }



  /**
   *
   */
  // var dataConst imported
  // from data-template.jade
  var dataOutput = []
  var itemMatched;

  dataN.forEach(function(itemInput) {

    itemMatched = dataConst.find(function(itemConst){
      return itemConst.lang === itemInput.lang;
    });

    if(itemMatched) {
      for(var key in itemMatched) {
        itemInput[key]=itemMatched[key];
      }
      dataOutput.push(itemInput);
    } else {
      console.log('lang ' + itemInput.lang + ' doesn\'t have template');
    }
  });


  /**
  * @func query data
  */
  function queryData(arrToQueryWhat, arrToQueryFrom) {
   var query = [];
   var queriedItem;

   arrToQueryWhat.forEach(function(what) {

     queriedItem = arrToQueryFrom.find(function(item) {
       return item.lang === what;
     });
     query.push(queriedItem);

   });

   return query;
  }
  /**
  * @string current language combos
  */
  // GR COMBOS
  var la_th =  queryData(['lo', 'th'], dataOutput);
  var la_th_my =  queryData(['lo', 'th', 'my'], dataOutput);
  var ar_ur_bn = queryData(['ar', 'ur', 'bn'], dataOutput);
  var cn_ja_ko = queryData(['cn', 'ja', 'ko'], dataOutput);
  var es_pt_en = queryData(['es', 'pt', 'en'], dataOutput);
  var ta_vi_ms = queryData(['ta', 'vi', 'ms'], dataOutput);
  var id_ru = queryData(['id', 'ru'], dataOutput);


  var pt_en = queryData(['pt', 'en'], dataOutput);
  var th_en = queryData(['th', 'en'], dataOutput);
  var th_id_en = queryData(['th', 'id', 'en'], dataOutput);
  var ms_en = queryData(['ms', 'en'], dataOutput);
  var lo_th_en = queryData(['lo', 'th', 'en'], dataOutput);
  var th_ms_en = queryData(['th', 'ms', 'en'], dataOutput);
  var es_pt_en = queryData(['es', 'pt', 'en'], dataOutput);
  var ar_en = queryData(['ar', 'en'], dataOutput);
  var id_en = queryData(['id', 'en'], dataOutput);
  var th_en = queryData(['th', 'en'], dataOutput);
  var ar_id_ms_en = queryData(['ar', 'id', 'ms', 'en'], dataOutput);
  var bn_en = queryData(['bn', 'en'], dataOutput);
  var ur_en = queryData(['ur', 'en'], dataOutput);

  // ELSE
  var en = queryData(['en'], dataOutput);
  var ar = queryData(['ar'], dataOutput);
  var bn = queryData(['bn'], dataOutput);
  var cn = queryData(['cn'], dataOutput);
  var es = queryData(['es'], dataOutput);
  var id = queryData(['id'], dataOutput);
  var ja = queryData(['ja'], dataOutput);
  var ko = queryData(['ko'], dataOutput);
  var lo = queryData(['lo'], dataOutput);
  var ms = queryData(['ms'], dataOutput);
  var pt = queryData(['pt'], dataOutput);
  var ru = queryData(['ru'], dataOutput);
  var th = queryData(['th'], dataOutput);
  var ur = queryData(['ur'], dataOutput);
  var vi = queryData(['vi'], dataOutput);
  var ta = queryData(['ta'], dataOutput);
  var my = queryData(['my'], dataOutput);

